name: Update Coverage Badge

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  update-coverage-badge:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: true
          fetch-depth: 0 # Needed to fetch full git history and branches

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11.2"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Run tests on PR branch
        run: |
          coverage run -m pytest -v
          coverage xml

      - name: Save PR branch coverage
        id: pr_coverage
        run: |
          PR_COVERAGE=$(coverage report | tail -n 1 | awk '{print $NF}' | tr -d '%')
          echo "PR coverage: $PR_COVERAGE%"
          echo "pr_coverage=$PR_COVERAGE" >> $GITHUB_ENV

      - name: Run tests on main branch
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin main
          git checkout origin/main
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt
          coverage run -m pytest -v
          coverage xml

      - name: Save main branch coverage
        if: github.event_name == 'pull_request'
        id: main_coverage
        run: |
          MAIN_COVERAGE=$(coverage report | tail -n 1 | awk '{print $NF}' | tr -d '%')
          echo "Main coverage: $MAIN_COVERAGE%"
          echo "main_coverage=$MAIN_COVERAGE" >> $GITHUB_ENV

      - name: Compare coverage
        if: github.event_name == 'pull_request'
        run: |
          echo "Main branch coverage: $main_coverage%"
          echo "PR branch coverage: $pr_coverage%"
          if (( $(echo "$pr_coverage < $main_coverage" | bc -l) )); then
            echo "❌ PR coverage ($pr_coverage%) is lower than main branch ($main_coverage%)"
            exit 1
          fi

      - name: Checkout back to PR branch
        if: github.ref == 'refs/heads/main'
        run: git checkout main

      - name: Generate coverage badge
        if: github.ref == 'refs/heads/main'
        run: coverage-badge -o coverage.svg

      - name: Check if coverage.svg changed
        if: github.ref == 'refs/heads/main'
        id: verify-changed-files
        run: |
          git fetch origin main
          if git diff --quiet origin/main -- coverage.svg; then
            echo "files_changed=false" >> $GITHUB_OUTPUT
          else
            echo "files_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit updated coverage badge
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add coverage.svg
          git commit -m "update coverage badge [skip ci]"

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
